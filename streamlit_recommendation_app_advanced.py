
import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from fpdf import FPDF

# إعداد الصفحة
st.set_page_config(page_title="تحليل الجدوى - منصة التجارة الذكية", layout="wide")
st.title("📊 تحليل الجدوى لمنصة التجارة الإلكترونية الذكية")
st.sidebar.header("🔍 التنقل بين الأقسام")
section = st.sidebar.selectbox("اختر القسم", ["تحليل المنافسين", "العروض البيانية", "تحليل المخاطر", "التكاليف", "تقرير PDF"])

costs = {
    "تكاليف تطوير الواجهة الأمامية (Front-end)": 25000,
    "تكاليف تطوير الواجهة الخلفية (Back-end)": 35000,
    "خوادم الاستضافة (Cloud Hosting)": 10000,
    "التراخيص والأمان الإلكتروني": 8000,
    "التسويق والإعلانات": 12000,
    "الدعم الفني والصيانة السنوية": 10000,
}
costs["إجمالي التكاليف"] = sum(costs.values())

# ✅ تعريف `costs_df` في بداية الكود ليكون متاحًا قبل استخدامه
costs_df = pd.DataFrame(list(costs.items()), columns=["البند", "التكلفة (بالريال السعودي)"])

# --- التكاليف ---
if section == "التكاليف":
    st.header("💰 تحليل التكاليف")
    st.dataframe(costs_df)
    
    # ✅ استخدام المخطط فقط داخل هذا القسم لضمان أن `costs_df` معرف مسبقًا
    fig = px.bar(costs_df, x="التكلفة (بالريال السعودي)", y="البند", orientation="h", 
                 title="🔹 توزيع التكاليف", text="التكلفة (بالريال السعودي)", color="التكلفة (بالريال السعودي)")
    st.plotly_chart(fig)


# --- تحليل المنافسين ---
if section == "تحليل المنافسين":
    st.header("تحليل المنافسين")
    competitors = {
           "سلة": {"نقاط القوة": "سهولة إنشاء المتاجر، خيارات دفع متعددة", "نقاط الضعف": "ضعف في التحليل العميق، قلة أدوات الأتمتة الذكية"},
        "زد": {"نقاط القوة": "تكامل مع حلول الدفع، واجهة سهلة، دعم قوي", "نقاط الضعف": "لا يوجد تحليل بيانات متقدم، لا يوجد دعم للذكاء الاصطناعي"},
        "Shopify": {"نقاط القوة": "دعم الأسواق العالمية، تكامل مع أدوات تسويقية متقدمة", "نقاط الضعف": "تكلفة الاشتراك مرتفعة، تعقيد في الإعداد للتجار غير التقنيين"},
        "Internet Solutions": {"نقاط القوة": "خبرة تقنية عالية، استضافة قوية، حلول أمنية متقدمة", "نقاط الضعف": "تركيز أقل على تحليل البيانات الموجه للتجار، لا يوجد نظام ذكاء اصطناعي متكامل"},
   "Internet Solutions": {"نقاط القوة": "خبرة تقنية عالية، استضافة قوية، حلول أمنية متقدمة", "نقاط الضعف": "تركيز أقل على تحليل البيانات الموجه للتجار، لا يوجد نظام ذكاء اصطناعي متكامل"},
        "Sky Cloud": {"نقاط القوة": "مرونة في استضافة المتاجر، خدمات سحابية قوية", "نقاط الضعف": "عدم وجود حلول تحليل بيانات متقدمة، ضعف في أتمتة التسويق"},
        "KMT": {"نقاط القوة": "أمان عالي، حلول متخصصة للشركات الكبرى", "نقاط الضعف": "تكاليف مرتفعة، لا تستهدف الشركات الناشئة أو المتاجر الصغيرة"},
        "سمارت تاتش": {"نقاط القوة": "حلول تسويقية قوية، استراتيجيات متقدمة", "نقاط الضعف": "لا يوجد تركيز على التحليل الذكي للبيانات"},
        "أوامر الشبكات": {"نقاط القوة": "بنية تحتية قوية، حلول أمنية شاملة", "نقاط الضعف": "قلة التخصيص لحلول التجارة الإلكترونية"},
        "إكسترا تك": {"نقاط القوة": "دعم قوي، حلول تقنية متعددة", "نقاط الضعف": "لا يوجد تكامل سلس مع الذكاء الاصطناعي"},
        "زينة تك": {"نقاط القوة": "تصميم برمجيات متقدمة، حلول مخصصة", "نقاط الضعف": "تركز على تطوير البرمجيات أكثر من التجارة الإلكترونية"},
        "أنماط الشبكة": {"نقاط القوة": "أمان عالي، استضافة متطورة", "نقاط الضعف": "ضعف في التكامل مع أنظمة تحليل البيانات"},
        "برمج بلوج": {"نقاط القوة": "خبرة طويلة في البرمجة، دعم مستمر", "نقاط الضعف": "عدم التركيز على الذكاء الاصطناعي والأتمتة"},
        "تقنيات المتاجر الذكية": {"نقاط القوة": "تقديم حلول متكاملة للمتاجر، دعم قوي لخدمات الدفع الرقمي", "نقاط الضعف": "لا يوجد تكامل مع الذكاء الاصطناعي في التوصيات"},
        "حلول البيانات الرقمية": {"نقاط القوة": "تحليل بيانات متقدم، دعم قرارات التجارة الإلكترونية", "نقاط الضعف": "لا توفر تكامل مباشر مع المتاجر الإلكترونية"},
        "Cloud Market": {"نقاط القوة": "حوسبة سحابية متقدمة، حلول دفع مرنة", "نقاط الضعف": "عدم وجود تحليل بيانات متخصص"},
        "AI Commerce": {"نقاط القوة": "تكامل كامل مع الذكاء الاصطناعي، تحليل سلوك العملاء بشكل تلقائي", "نقاط الضعف": "تكلفة تشغيلية مرتفعة، تعقيد في الإعداد"},
        "Ecom Tech": {"نقاط القوة": "تحليل بيانات قوي، دعم للمشاريع الناشئة", "نقاط الضعف": "نقص في التكامل مع الأسواق العالمية"}
    }

   
    competitors_df = pd.DataFrame.from_dict(competitors, orient="index")
    st.dataframe(competitors_df)

# --- العروض البيانية ---
if section == "العروض البيانية":
    st.header("📊 العروض البيانية")
    num_merchants = np.arange(100, 5001, 500)
    subscription_fee = 250
    commission_rate = 0.025
    avg_sales_per_merchant = 12000
    revenues = (num_merchants * subscription_fee) + (num_merchants * avg_sales_per_merchant * commission_rate)
    costs = 150000 + (num_merchants * 50)
    profit = revenues - costs
    profit_df = pd.DataFrame({"عدد التجار": num_merchants, "الإيرادات الشهرية": revenues, "صافي الأرباح الشهرية": profit})
    st.dataframe(profit_df)
    
    fig, ax = plt.subplots(figsize=(12, 6))
    sns.lineplot(x=num_merchants, y=revenues, label="الإيرادات", marker="o", ax=ax)
    sns.lineplot(x=num_merchants, y=profit, label="صافي الأرباح", marker="s", ax=ax)
    ax.set_xlabel("عدد التجار")
    ax.set_ylabel("الريال السعودي")
    ax.set_title("تحليل الإيرادات وصافي الأرباح المتوقعة")
    ax.legend()
    ax.grid(True)
    st.pyplot(fig)

# --- تحليل المخاطر ---
risks = {
        "التنافسية العالية": "وجود منصات قوية في السوق يزيد من صعوبة الاستحواذ على العملاء.",
        "التكاليف التشغيلية": "قد تؤثر تكاليف التشغيل العالية على الربحية إذا لم يتم إدارتها بفعالية.",
        "الأمان الإلكتروني": "ضرورة حماية بيانات المستخدمين ضد الهجمات السيبرانية والتسريبات المحتملة.",
        "تغير القوانين الضريبية": "أي تغييرات في الضرائب يمكن أن تؤثر على التكاليف التشغيلية والأسعار."
    }
if section == "تحليل المخاطر":
    st.header("⚠️ تحليل المخاطر")
    risks_df = pd.DataFrame(list(risks.items()), columns=["المخاطر", "التفاصيل"])
    st.dataframe(risks_df)
if section == "تقرير PDF":
    st.header("📄 إنشاء تقرير PDF")
    pdf = FPDF()
    pdf.add_page()

    # ✅ إضافة خط يدعم اللغة العربية
    pdf.add_font("NotoSansArabic", '', "NotoSansArabic-Regular.ttf", uni=True)
    pdf.set_font("NotoSansArabic", size=16)
    
    pdf.cell(200, 10, "تحليل الجدوى - منصة التجارة الذكية", ln=True, align='C')
    pdf.ln(10)

    # إضافة قسم المخاطر في التقرير
    pdf.set_font("NotoSansArabic", size=12)
    pdf.cell(200, 10, "تحليل المخاطر", ln=True)
    pdf.ln(5)

    for key, value in risks.items():
        pdf.set_font("NotoSansArabic", style='B', size=12)
        pdf.cell(0, 10, key, ln=True)
        pdf.set_font("NotoSansArabic", size=10)
        pdf.multi_cell(0, 8, value)
        pdf.ln(2)
    
    # إضافة قسم التكاليف في التقرير
    pdf.set_font("NotoSansArabic", size=12)
    pdf.cell(200, 10, "تحليل التكاليف", ln=True)
    pdf.ln(5)
    for key, value in costs.items():
        pdf.set_font("NotoSansArabic", style='B', size=12)
        pdf.cell(0, 10, key, ln=True)
        pdf.set_font("NotoSansArabic", size=10)
        pdf.multi_cell(0, 8, f"{value} ريال سعودي")
        pdf.ln(2)

    pdf_output = "business_analysis_report.pdf"
    pdf.output(pdf_output)
    with open(pdf_output, "rb") as file:
        st.download_button(label="📥 تحميل التقرير PDF", data=file, file_name=pdf_output, mime="application/pdf")
# --- خطة التطوير المستقبلية ---
if section == "خطة التطوير المستقبلية":
    st.header("🚀 خطة التطوير المستقبلية")
    roadmap = {
        "الشهر 1-3": "إطلاق نسخة تجريبية (MVP) واختبار السوق.",
        "الشهر 4-6": "تحليل بيانات العملاء وتحسين تجربة المستخدم بناءً على التغذية الراجعة.",
        "الشهر 7-12": "إطلاق ميزات الذكاء الاصطناعي المتقدمة، مثل التوصيات الذكية والتحليل التنبئي.",
        "السنة 2": "التوسع في الأسواق الإقليمية وإضافة دعم للغات مختلفة.",
        "السنة 3": "الاستحواذ على حصة سوقية أكبر عبر الشراكات الاستراتيجية."
    }
    roadmap_df = pd.DataFrame(list(roadmap.items()), columns=["المرحلة", "الوصف"])
    st.dataframe(roadmap_df)